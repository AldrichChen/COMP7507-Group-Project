c(2,3)
nchar("<meta name="Distribution" content="Global" />")
nchar
x = "<meta name="Distribution" content="Global" />"
<ul class="sidemenu">
x = "<ul class=sidemenu>"
nchar(x)
x = "    			<ul class=sidemenu>"
nchar(x)
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.for("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
set.seed(13425)
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10), "var3" = sample(11:15))
X
X[sample(1:5),]
X[1:5, "var2"]
X[, "var2"]
X$var1 > 1
?which
X <- X[sample(1:5),]
which(X$var2 > 8)
X
?sort
X$var4 <- rnorm(5)
X
X$var2[c(1,3)] = NA
X
class(c(1,3)
)
c(1,3)
X$var4
class(X$var4)
type(X$var4)
?merge
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
install.packages("swirl")
library("swirl")
swirl()
5+7
x=5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
z <- c(z, 555)
c(z, 555)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
z * 2 + 100
info()
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq = seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
set_along(my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "shit")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(seq(1,3,by=1), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data
y
z
my_data == NA
sum(my_na)
my_na
my_data
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vec)
names(vect)
vect2
vect2 = c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_ve)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
names(my_data) <- c("patient", "age", "weight, "bp", "rating", "test)
names(my_data) <- c("patient", "age", "weight, "bp", "rating", "test")
names(my_data) <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data) <- cnames
names(my_data)
my_data
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2 <- t2$min
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4)
sample(1:6, 4, replace = FALSE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LTTERS
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replacement = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips <-rbinom(1,size=100,prob=0.7)
flips <-rbinom(100,size=1,prob=0.7)
flips <-rbinom(n=100,size=1,prob=0.7)
flips2 <-rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, std = 25)
rnorm(10, mean = 100, sd = 25)
rpois(5)
rpois(5, mean=10)
?rpos
?rpois
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(class)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plant)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plan)
str(plants)
sapply(flags, unique)
vapply(flags, unique, numeric(1)
)
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
source('D:/project/data/ISODATA.R', echo=TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
f <- file.path(getwd(), "PUMSDataDict06.pdf")
download.file(url, f, mode="wb")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
setkey(dt, VAL)
dt[, .N, key(dt)]
library(data.table)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
f <- file.path(getwd(), "PUMSDataDict06.pdf")
download.file(url, f, mode="wb")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
setkey(dt, VAL)
dt[, .N, key(dt)]
setkey(dt, FES)
dt[, .N, key(dt)]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
f <- file.path(getwd(), "DATA.gov_NGAP.xlsx")
download.file(url, f, mode="wb")
rows <- 18:23
cols <- 7:15
dat <- read.xlsx(f, 1, colIndex=cols, rowIndex=rows)
sum(dat$Zip*dat$Ext,na.rm=T)
library(xlsx)
library(xlsx)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
f <- file.path(getwd(), "DATA.gov_NGAP.xlsx")
download.file(url, f, mode="wb")
rows <- 18:23
cols <- 7:15
dat <- read.xlsx(f, 1, colIndex=cols, rowIndex=rows)
sum(dat$Zip*dat$Ext,na.rm=T)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlInternalTreeParse(url)
rootNode <- xmlRoot(doc)
names(rootNode)
# names(rootNode[[1]])
names(rootNode[[1]][[1]])
zipcode <- xpathSApply(rootNode, "//zipcode", xmlValue)
table(zipcode == 21231)
?xmlInternalTreeParse
??xmlInternalTreeParse
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
DT <- fread(f)
check <- function (y, t) {
message(sprintf("Elapsed time: %.10f", t[3]))
print(y)
}
t <- system.time(y <- sapply(split(DT$pwgtp15,DT$SEX),mean))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- DT[,mean(pwgtp15),by=SEX])
check(y, t)
t <- system.time(y <- rowMeans(DT)[DT$SEX==1]) + system.time(rowMeans(DT)[DT$SEX==2])
check(y, t)
t <- system.time(y <- mean(DT[DT$SEX==1,]$pwgtp15)) + system.time(mean(DT[DT$SEX==2,]$pwgtp15))
check(y, t)
t <- system.time(y <- tapply(DT$pwgtp15,DT$SEX,mean))
check(y, t)
source('D:/project/data/main.R', echo=TRUE)
data = read.csv(allCausespath)
allCausespath = "./per1000/Merged.csv"
data = read.csv(allCausespath)
names(data)
commonCauseRankOfCountries(data[, -c(1, 2)])
res = commonCauseRankOfCountries(data[, -c(1, 2)])
plot(res)
barplot(res)
commonCauseRankOfCountries(data[, -c(1, 2)])
causeRank(data)
res2 = causeRank(data)
source('D:/project/data/main.R', echo=TRUE)
causeRank(data)
standardDeviation = apply(data[, -c(1, 2)], 2, sd)
standardDeviation
boxplot(data[, -c(1,2)])
source('D:/project/data/main.R', echo=TRUE)
sdRank(data)
sdRank(data)
sdRank(data)
sdRank(data)
source('D:/project/data/main.R', echo=TRUE)
res = commonCauseRankOfCountries(data)
table(res)
res
commonCauseRankOfCountries(data[, -c(1, 2)])
res = commonCauseRankOfCountries(data[, -c(1, 2)])
barplot(res)
source('D:/project/data/main.R', echo=TRUE)
ans
names(data)
data = read.csv(pcapath)[, 2:10]
ans = PCA(data)
names(data)
ans
prcomp(data)
princomp(data)
source('D:/project/data/main.R', echo=TRUE)
ans
source('D:/project/data/main.R', echo=TRUE)
ans
PCA(data)
